#! .goreleaser.yaml
#@ binaries = {
#@   "kraft": {
#@     "darwin": ["amd64", "arm64"],
#@     "freebsd": ["amd64", "arm64"],
#@     "linux": ["amd64", "arm64"],
#@   },
#@   "runu": {
#@     "linux": ["amd64"],
#@   },
#@ }
changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^.*#[[:digit:]]+.*$'
  groups:
    - title: ‚ö†Ô∏è Breaking Changes
      regexp: '^[[:xdigit:]]+: [[:lower:]]+(\(.*\))?!:.*$'
      order: 1
    - title: üöÄ New Features
      regexp: '^[[:xdigit:]]+: feat(\(.*\))?:.*$'
      order: 2
    - title: üêõ Bug Fixes
      regexp: '^[[:xdigit:]]+: fix(\(.*\))?:.*$'
      order: 3
    - title: üìñ Docs
      regexp: '^[[:xdigit:]]+: docs(\(.*\))?:.*$'
      order: 4
    - title: ü§ñ Bumps
      regexp: '^[[:xdigit:]]+: (gomod|build)\(deps\):.*$'
      order: 5
    - title: üêí Miscellaneous
      order: 999

release:
  github:
    owner: unikraft
    name: kraftkit
  draft: false
  prerelease: true
  mode: replace
  header: |
    ## KraftKit {{ .Tag }} ({{ .Date }})

    This is the pre-release version of KraftKit.
  name_template: 'v{{ .Version }}'

nfpms:
  - vendor: Unikraft
    id: nfpm-default
    maintainer: Alexander Jung <alex@unikraft.io>
    description: Build and use highly customized and ultra-lightweight unikernels.
    license: BSD 3-clause
    bindir: /usr/local/bin
    homepage: https://kraftkit.sh
    formats:
      - deb
      - rpm
      - apk
    recommends:
      - bison
      - build-essential
      - flex
      - git
      - libncurses-dev
      - qemu-system
      - socat
      - unzip
      - wget
    suggests:
      - gcc-x86-64-linux-gnu
      - g++-x86-64-linux-gnu
    contents:
      - src: scripts/kraftld
        dst: /usr/local/bin/kraftld

builds:
#@ for bin, oses in binaries.items():
#@ for os, archs in oses.items():
#@ for arch in archs:
  - id: #@ "{}-{}-{}".format(bin, os, arch)
    binary: #@ bin
    main: #@ "./cmd/{}".format(bin)
    env:
      - CGO_ENABLED=1
      - GOMOD=kraftkit.sh
    goos:
      - #@ os
    goarch:
      - #@ arch
    ldflags:
      - -s -w
      - -X {{ .Env.GOMOD }}/internal/version.version={{ .Version }}
      - -X {{ .Env.GOMOD }}/internal/version.commit={{ .Commit }}
      - -X {{ .Env.GOMOD }}/internal/version.buildTime={{ .Date }}
      #@ if bin == "kraft" and os == "linux":
      - -linkmode external -extldflags "-static -lyajl -Wl,--whole-archive -llzma -lbz2 -lzstd -llzo2
        -lxenguest -Wl,--no-whole-archive -lxenevtchn -lxenlight -lxenstore -lxenctrl
        -lxenforeignmemory -lxenforeignmemory -lxencall -lxentoolcore -lxenhypfs
        -lxendevicemodel -lxengnttab -lxentoollog -lz -lnl-route-3 -lnl-3 -luuid -lutil"
      #@ else:
      - -linkmode external -extldflags "-static"
      #@
    tags:
      - containers_image_storage_stub
      - containers_image_openpgp
      #@ if bin == "kraft" and os == "linux":
      - xen
      #@ end
#@ end
#@ end
#@ end

archives:
#@ for os, archs in binaries["kraft"].items():
#@ for arch in archs:
  - id: #@ "archive-kraft-{}-{}".format(os, arch)
    format: tar.gz
    name_template: kraft_{{ .Version }}_{{ .Os }}_{{ .Arch }}
    builds:
      - #@ "kraft-{}-{}".format(os, arch)
    files:
      - src: scripts/kraftld
        strip_parent: true
        info:
          mode: 0755
#@ end
#@ end

#@ for os, archs in binaries["runu"].items():
#@ for arch in archs:
  - id: #@ "archive-runu-{}-{}".format(os, arch)
    format: tar.gz
    name_template: runu_{{ .Version }}_{{ .Os }}_{{ .Arch }}
    builds:
      - #@ "runu-{}-{}".format(os, arch)
#@ end
#@ end
