on: [push, pull_request]

name: Go Checks

jobs:
  unit:
    runs-on: ubuntu-latest
    container: golang:1.18-bullseye
    name: All
    env:
      RUNGOGENERATE: false
    steps:
      # Temporary workaround until this pipeline uses the 'myself' buildenv
      - name: Install libgit2-dev & node
        run: apt-get update && apt-get install -y --no-install-recommends libgit2-dev nodejs

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@2022.1.3

      - name: Install gofumpt
        run: go install mvdan.cc/gofumpt@v0.3.1

      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/setup-go@v2
        with:
          go-version: "1.18.x"

      - name: Check that go.mod is tidy
        uses: protocol/multiple-go-modules@v1.2
        with:
          run: |
            go mod tidy
            if [[ -n $(git ls-files --other --exclude-standard --directory -- go.sum) ]]; then
              echo "go.sum was added by go mod tidy"
              exit 1
            fi
            git diff --exit-code -- go.sum go.mod

      - name: gofumpt
        if: ${{ success() || failure() }} # run this step even if the previous one failed
        run: |
          test -z $(gofumpt -d -l -e . | tee /dev/stderr) 

      - name: go vet
        if: ${{ success() || failure() }} # run this step even if the previous one failed
        uses: protocol/multiple-go-modules@v1.2
        with:
          run: go vet ./...

      - name: staticcheck
        if: ${{ success() || failure() }} # run this step even if the previous one failed
        uses: protocol/multiple-go-modules@v1.2
        with:
          run: |
            set -o pipefail
            staticcheck ./... | sed -e 's@\(.*\)\.go@./\1.go@g'

      - name: go generate
        uses: protocol/multiple-go-modules@v1.2
        if: (success() || failure()) && env.RUNGOGENERATE == 'true'
        with:
          run: |
            git clean -fd # make sure there aren't untracked files / directories
            go generate ./...
            # check if go generate modified or added any files
            if ! $(git add . && git diff-index HEAD --exit-code --quiet); then
              echo "go generated caused changes to the repository:"
              git status --short
              exit 1
            fi
